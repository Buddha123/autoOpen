#
# A Test Workflow for Building OpenWrt
#

name: Build lede for amd64 

# Add a button to trigger the workflow manually
on: 
 workflow_dispatch:
 
# A series of steps
jobs:
 build_lede_amd64:
  runs-on: ubuntu-latest
  
  steps:
   - name: Checkout
     uses: actions/checkout@v3
     
   - name: 安装编译依赖
     run: |
      docker rmi `docker images -q`
      sudo apt purge -y azure-cli zulu* llvm* firefox powershell openjdk*
      sudo apt update -y
      sudo apt full-upgrade -y
      sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev python3-setuptools
      sudo apt clean -y

   - name: 下载源代码
     env:
      REPO_URL: https://github.com/coolsnowwolf/lede
     run: git clone $REPO_URL
     
   - name: 更新并安装 feeds
     working-directory: ./lede
     run: |
      ./scripts/feeds update -a
      ./scripts/feeds install -a
      
   - name: 添加 argon 主题
     working-directory: ./lede/package/lean
     run: |
      rm -rf luci-theme-argon
      git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git luci-theme-argon
     
   - name: 添加 openclash
     working-directory: ./lede/package
     run: |
      mkdir luci-app-openclash
      cd luci-app-openclash
      git init
      git remote add -f origin https://github.com/vernesong/OpenClash.git
      git config core.sparsecheckout true
      echo "luci-app-openclash" >> .git/info/sparse-checkout
      git pull origin master
      git branch --set-upstream-to=origin/master master

   - name: 使用自己的config
     env:
        CONFIG_FILE: 'amd64.config'
     run: |
      [ -e $CONFIG_FILE ] && mv $CONFIG_FILE lede/.config
      cd lede && make defconfig
     
   - name: 下载 dl 库，编译固件
     working-directory: ./lede
     run: |
      make download -j8
      make V=s -j$(nproc)
      
   - name : Upload artifact
     uses: actions/upload-artifact@master
     with:
      name: Lede
      path: lede/bin/targets
        
#   - name: 查看可用磁盘空间
#     run: df -hT $PWD
